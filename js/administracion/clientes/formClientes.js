/*
 * File: formClientes.js
 * Date: Thu Feb 02 2017 23:47:25 GMT-0700 (Hora estándar Montañas (México))
 * 
 * This file was generated by Ext Designer version 1.1.2.
 * http://www.sencha.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */
Ext.ns('eNuevoOriente');
formClientes = Ext.extend(formClientesUi, {
	idReg:0,
	idSeleccionado:0,
	configurarToobar:function(){
		
			this.btnAgregar.setIcon('images/iconos/clientes_add.png');
			this.btnEditar.setIcon('images/iconos/clientes_edit.png');
			this.btnEliminar.setIcon('images/iconos/clientes_delete.png');
			
		
		
	},
	renderContacto:function(a,b,c,d){

        var imgMail="<img style='width:12px;height:12px;' src='images/iconos/mail_chico.png' />";
        var msgMail;

       
        msgMail=c.data.correo;
        msgMail=msgMail.toLowerCase();
        if (c.data.correo==""){
            msgMail="<p style='font-style:italic'>sin email</p>";
        }            

      var div="<table>"+
            "<tr>"+
            "<td style='width:16px;'>"+imgMail+"</td>"+
            "<td>"+msgMail+"</td>"+
         "</tr>"+         
          "</table>";

      return div;
	},
	renderTelefono1:function(a,b,c,d){
        var imgTel="<img src='images/iconos/users_grid/telephone.png' />";

        var msgTel;

        msgTel=c.data.telefono1;
        
                
        if (c.data.telefono1==""){
          //  imgTel="";
            msgTel="<p style='font-style:italic'>sin teléfono</p>";
        }
       
		var div="<table>"+
          "<tr>"+
            "<td style='width:16px;'>"+imgTel+"</td>"+
            "<td>"+msgTel+"</td>"+
         "</tr>"+
         "</table>";

		return div;
    },
	renderTelefono2:function(a,b,c,d){
        var imgTel="<img src='images/iconos/users_grid/telephone.png' />";

        var msgTel;

        msgTel=c.data.telefono2;
        
                
        if (c.data.telefono2==""){
          //  imgTel="";
            msgTel="<p style='font-style:italic'>sin teléfono</p>";
        }
       
		var div="<table>"+
          "<tr>"+
            "<td style='width:16px;'>"+imgTel+"</td>"+
            "<td>"+msgTel+"</td>"+
         "</tr>"+
         "</table>";

		return div;
    },
	renderCelular:function(a,b,c,d){
        var imgCel="<img src='images/iconos/users_grid/smartphone.png' />";
       

        var msgCel;

        msgCel=c.data.celular;
        
        if (c.data.celular==""){
          //  imgCel="";
            msgCel="<p style='font-style:italic'>sin celular</p>";
        }

      var div="<table>"+
          "<tr>"+
            "<td style='width:16px;'>"+imgCel+"</td>"+
            "<td>"+msgCel+"</td>"+
         "</tr>"+
          "</table>";

      return div;
    },
	inicializarStores: function(){
		
		this.gridCliente.store=new eNuevoOriente.storeGridCliente();
		this.gridCliente.bottomToolbar.bindStore(this.gridCliente.getStore());
		
		this.cmbStatus.store = new eNuevoOriente.storeStatus();        
		this.cmbRuta.store = new eNuevoOriente.storeRuta();	
		this.cmbRuta.store.load();		 
		this.gridCliente.bottomToolbar.pageSize=eNuevoOriente.parametros.registros_pagina;
		
		
		
	},
	inicializarEventos: function(){
		  
		var data=new Array(
							{id:'A',nombre:eNuevoOriente.formatearTexto('ACTIVOS')},
							{id:'I',nombre:eNuevoOriente.formatearTexto('INACTIVOS')},
							{id:'T',nombre:eNuevoOriente.formatearTexto('TODOS')}
					);
			 this.cmbStatus.store.loadData({data:data});
			 this.cmbStatus.setValue(eNuevoOriente.formatearTexto('A'));	
		
		this.gridCliente.store.on('beforeload',function(){
				 
				this.gridCliente.store.baseParams=this.gridCliente.store.baseParams || {};
				this.gridCliente.store.baseParams.filtro=this.txtFiltro.getValue();
				this.gridCliente.store.baseParams.filtroStatus=this.cmbStatus.getValue();
			},this);
		
		this.gridCliente.store.on('load',function(){
			this.el.unmask();
		},this);
		
		
		this.btnGuardar.on('click', function(){
			this.guardar();		
		}, this);
		
		this.btnAgregar.on('click',function(){
			this.nuevo();
		},this);
		
		this.btnEditar.on('click',function(){
			var record = this.gridCliente.store.getAt(this.idSeleccionado);				
			this.idReg = record.data.id_cliente;
			this.txtNombre.setValue(eNuevoOriente.formatearTexto(record.data.nombre));
			this.txtCalle.setValue(eNuevoOriente.formatearTexto(record.data.calle));
			this.txtColonia.setValue(eNuevoOriente.formatearTexto(record.data.colonia));
			this.txtCP.setValue(eNuevoOriente.formatearTexto(record.data.cp));
			
			this.txtCURP.setValue(eNuevoOriente.formatearTexto(record.data.curp));
			this.txtNumCredencial.setValue(eNuevoOriente.formatearTexto(record.data.num_credencial));
			this.txtTelefono1.setValue(eNuevoOriente.formatearTexto(record.data.telefono1));
			this.txtTelefono2.setValue(eNuevoOriente.formatearTexto(record.data.telefono2));
			this.txtCelular.setValue(eNuevoOriente.formatearTexto(record.data.celular));
			this.txtCorreo.setValue(eNuevoOriente.formatearTexto(record.data.correo));
			
			this.cmbRuta.setValue(record.data.id_ruta);
			this.txtStatus.setValue(record.data.status);
			this.txtNombre.focus(true, 0);	
			this.btnDesactivar.setDisabled(false);
				
			
		},this);
		
		this.btnEliminar.on('click',function(){
			this.eliminar();
		},this);
		
		this.btnDesactivar.on('click',function(){	
			this.cancelar();			
		},this);
		
		this.txtFiltro.on('specialkey',function(comp,e){		
			if (e.getCharCode()==e.ENTER){
				this.gridCliente.bottomToolbar.doRefresh();
			}
		},this);
		
		this.cmbStatus.on('select',function(combo, record, index){	
				this.gridCliente.bottomToolbar.doRefresh();			
		},this);
		
		 this.gridCliente.on('rowclick', this.onRowClick, this);
		 
		 
		this.gridCliente.on('celldblclick', this.editar , this);

		this.on('cambioDeStatus',function(params){			
			var status=params.status;
			switch(status){
				case 'I':
					this.btnDesactivar.setIcon("images/iconos/clientes_activos.png");
					this.btnDesactivar.setText("Activar");
				break;
				case 'A':
					this.btnDesactivar.setIcon("images/iconos/clientes_todos.png");
					this.btnDesactivar.setText("Desactivar");
				break;
			}
		},this);		
		
	},
	inicializarRender: function(){
		var colModel=this.gridCliente.getColumnModel();
        var columna=colModel.getColumnById('colTelefono1');
        columna.renderer=this.renderTelefono1	
		
		var colModel=this.gridCliente.getColumnModel();
        var columna=colModel.getColumnById('colTelefono2');
        columna.renderer=this.renderTelefono2
		
		var colModel=this.gridCliente.getColumnModel();
        var columna=colModel.getColumnById('colCelular');
        columna.renderer=this.renderCelular

		var colModel=this.gridCliente.getColumnModel();
        var columna=colModel.getColumnById('colCorreo');
        columna.renderer=this.renderContacto
	},
    initComponent: function() {
        formClientes.superclass.initComponent.call(this);
		this.gridCliente.columnaStatus="status";
		
		this.txtStatus.setValue=function(value){        	
        	Ext.form.TextField.prototype.setValue.apply(this,arguments);
        	this.fireEvent('cambioDeStatus',{status:value});
        };
		
		this.configurarToobar();
		this.inicializarStores();
		this.inicializarEventos();
		this.inicializarRender();
    },
	guardar:function(){
		if (this.formCliente.getForm().isValid()){			
			var params={};			
			params['Cliente[id_cliente]'] = this.idReg;
			params['Cliente[nombre]'] = this.txtNombre.getValue();
			params['Cliente[calle]'] = this.txtCalle.getValue();
			params['Cliente[colonia]'] = this.txtColonia.getValue();
			params['Cliente[cp]'] = this.txtCP.getValue();
			params['Cliente[curp]'] = this.txtCURP.getValue();
			params['Cliente[num_credencial]'] = this.txtNumCredencial.getValue();
			params['Cliente[telefono1]'] = this.txtTelefono1.getValue();
			params['Cliente[telefono2]'] = this.txtTelefono2.getValue();
			params['Cliente[celular]'] = this.txtCelular.getValue();
			params['Cliente[correo]'] = this.txtCorreo.getValue();
			params['Cliente[id_ruta]'] = this.cmbRuta.getValue();			
			
			this.el.mask('Guardando...');
			this.formCliente.getForm().submit({
				params:params,
				scope:this,
				url:'app.php/clientes/guardar',
				success:function(){
					this.el.unmask();
					this.idReg=0;
					this.formCliente.getForm().reset();
					this.btnDesactivar.setDisabled(true);
					this.gridCliente.bottomToolbar.doRefresh();
				},
				failure:function(form, action){
					switch (action.failureType) {
		            case Ext.form.Action.CLIENT_INVALID:		                
		                msg="Favor de revisar los campos marcados";
		                icon=Ext.MessageBox.WARNING;
		                break;
		            case Ext.form.Action.CONNECT_FAILURE:		                
		                msg="Error en la comunicación ajax, intente de nuevo";
		                icon=Ext.MessageBox.ERROR;
		                break;
		            case Ext.form.Action.SERVER_INVALID:
		                icon=Ext.MessageBox.ERROR;
		                msg=action.result.msg;
					}
					Ext.Msg.show({
					   title:'Error',
					   msg: msg,
					   buttons: Ext.Msg.OK,						  						   
					   icon: icon
					});
					this.el.unmask();
					}

				});
				
			
		}else{
			return;
			
		}	
		
		
	},
	nuevo: function(){
		this.formCliente.getForm().reset();
		this.idReg = 0;
		this.txtNombre.focus(true);
		this.btnDesactivar.setDisabled(true);
	},
	editar: function(Grid, rowIndex, columnIndex, e){		
		var record = this.gridCliente.store.getAt(rowIndex);				
		this.idReg = record.data.id_cliente;
		this.txtNombre.setValue(eNuevoOriente.formatearTexto(record.data.nombre));
		this.txtCalle.setValue(eNuevoOriente.formatearTexto(record.data.calle));
		this.txtColonia.setValue(eNuevoOriente.formatearTexto(record.data.colonia));
		this.txtCP.setValue(eNuevoOriente.formatearTexto(record.data.cp));
		
		this.txtCURP.setValue(eNuevoOriente.formatearTexto(record.data.curp));
		this.txtNumCredencial.setValue(eNuevoOriente.formatearTexto(record.data.num_credencial));
		this.txtTelefono1.setValue(eNuevoOriente.formatearTexto(record.data.telefono1));
		this.txtTelefono2.setValue(eNuevoOriente.formatearTexto(record.data.telefono2));
		this.txtCelular.setValue(eNuevoOriente.formatearTexto(record.data.celular));
		this.txtCorreo.setValue(eNuevoOriente.formatearTexto(record.data.correo));
		
		this.cmbRuta.setValue(record.data.id_ruta);
		this.txtStatus.setValue(record.data.status);
		this.txtNombre.focus(true, 0);	
		this.btnDesactivar.setDisabled(false);
		
		
	},
	eliminar:function(btn,id){
		switch(btn){	//ESTE SWITCH ES USADO PARA ANALIZAR LO QUE TRATA DE HACER EL USUARIO, LA PRIERA VEZ DEBE ENTRAR A default:
    	case 'no':
    		return;
    	break;
    	case 'yes':
    		this.eliminar('borrar');
    		return;
    		break;
    	case 'borrar':
    		break;		//SALE DEL SWITCH Y SIGUE EJECUTANDOSE LA FUNCI�N
    	case undefined:	//AQUI ENTRA LA PRIMERA VEZ
    	case false:    		
    	default:
    		var me=this;    		
    		Ext.Msg.show({
 			   title:'Confirme por favor',
 			   msg: "¿Desea eliminar el Usuario?",
 			   buttons: Ext.Msg.YESNO,
 			   fn: function(btn){	    				
    				me.eliminar(btn);
    			},
 			   scope:this,
 			   icon: Ext.MessageBox.QUESTION
 			});
    		return;
		} 
		
		if (id==undefined){	//obtener el id del registro seleccionado
    		var  sel=this.gridCliente.getSelectionModel().getSelections();
    		if (sel.length==undefined || sel.length==0){
    			return;
    		}else{
    			id=sel[0].id;    			
    		}
    	}
		
		this.el.mask(eno.mensajeDeEspera);
		Ext.Ajax.request({
			params: { id_cliente: id },
			scope:this,
		   	url: 'app.php/clientes/eliminar',
		   	success: function(response,options){	
				var respuesta=Ext.decode(response.responseText);
				if (respuesta.success==false){
					this.el.unmask();
					return;
				}
				this.idReg=0;
				this.formCliente.getForm().reset();
				this.btnDesactivar.setDisabled(true);
				this.gridCliente.bottomToolbar.doRefresh();			
				
		   	},
		   	failure: function(){
		   		this.el.unmask();
		   	}		   
		});
	},
	cancelar:function(){
		this.el.mask(eno.mensajeDeEspera);
		Ext.Ajax.request({
			params: { 
				id_cliente: this.idReg,
				status:this.txtStatus.getValue()
			},
			scope:this,
		   	url: 'app.php/clientes/cambiarstatus',
		   	success: function(response, options){
				this.el.unmask();			
				var respuesta=Ext.decode(response.responseText);
				if (respuesta.success==true){
						if (respuesta.data.status!=undefined){
							this.txtStatus.setValue(respuesta.data.status);
						}
					this.gridCliente.bottomToolbar.doRefresh();	
				}
		   	},
		   	failure: function(){
		   		this.el.unmask();
		   	}		   
		});
	},	
	onRowClick : function( grid ,rowIndex, e ){
		var  sel=this.gridCliente.getSelectionModel().getSelections();
		if (sel.length==undefined || sel.length==0){
			this.btnEditar.setDisabled(true);
		}else{
			this.btnEditar.setDisabled(false);
			this.idSeleccionado = rowIndex;
		}
		if (sel.length==undefined || sel.length==0){
			this.btnEliminar.setDisabled(true);
		}else{
			this.btnEliminar.setDisabled(false);
			this.idSeleccionado = rowIndex;
		}
		
	},
	listeners:{
		activate:function(){
			if (this.activado==true){
				return;
			}
			this.activado=true;
			this.gridCliente.bottomToolbar.doRefresh();
		}   	
    }
	
});
Ext.reg('formClientes', formClientes);
